<template>
  <view class="page-index">
    <!-- <SearchBar :placeholder="searchText"></SearchBar> -->
    <navigator url="/pages/main/search" redirect="false" hover-class="navigator-hover" open-type="navigate|redirect|switchTab">
    <view class="weui-search-bar">
      <view class="weui-search-bar__form">
        <view class="weui-search-bar__box">
          <icon class="weui-icon-search_in-box" type="search" size="14"></icon>
          <view class="weui-search-bar__text">搜索感兴趣的义工需求</view>
        </view>
        <label class="weui-search-bar__label" hidden="{{inputShowed}}">
          <icon class="weui-icon-search" type="search" size="14"></icon>
          <view class="weui-search-bar__text">搜索感兴趣的义工需求</view>
        </label>
      </view>
    </view>
    </navigator>
    <Swiper :list.sync="swipers" height="280"></Swiper>
    <BookList1 :list.sync="list0" title="老人被服务需求"
     :loading.sync="loading1" :noMore.sync="noMoreList1"
     :page.sync="pagetype1" ></BookList1>
     <BookList2 :list.sync="list1" title="志愿者可提供服务"
     :loading.sync="loading2" :noMore.sync="noMoreList2"
     :page.sync="pagetype2" ></BookList2>
  </view>
</template>

<script>
import wepy from 'wepy'
import { service } from '../config.js'
import base from '../mixins/base'
import user from '../mixins/user'
import publicProcess from '../mixins/publicProcess'
import Swiper from '../components/swiper'
import SearchBar from '../components/searchbar'
import BookList from '../components/bookList'

export default class pageIndex extends wepy.page {
  mixins = [base, user, publicProcess]
  config = {
    navigationBarTitleText: '首页',
    navigationBarTextStyle: 'white',
    navigationBarBackgroundColor: '#049BFF'
  }
  data = {
    inputShowed: false,
    swipers: [
      // 占位图，防止请求错误无图显示
      { image: '/images/timg.gif', url: '/pages/index' },
      { image: '/images/yigong.jpg', url: '/pages/index' }
    ],
    noMoreList1: false,
    loading1: false,
    noMoreList2: false,
    loading2: false,
    pagetype1:'demandDetail',
    pagetype2:'volunteerDetail',
    list0: [],
    list1: [],
    page: 0,
    size: 5
  }

  onReady() {
  }
  onShow() {
    this.initPageData()
  }

  onPullDownRefresh() {
    this.initPageData()
  }

  onReachBottom() {
    setTimeout(() => {
      this.updateDemandList()
      this.updateServiceList()
    }, 200);
  }
   
  // 初始化页面数据
  async initPageData() {
    var id = this.$parent.globalData.id
    console.log("id:"+id)
    // 请求列表
    this.updateDemandList(id)
    this.updateServiceList(id)
    this.$apply()
  }

  // 更新图书列表
  async updateDemandList(id) {
    let res = await wepy.request({
         url: service.host + '/search/'+id,
         data:{
           type:0
         },
         method: 'GET'
    })
    const data = res.data
    // var finallist = await this.handelList(data)
    // this.list0 = this.getItems(finallist,finallist.length)
    this.list0 = this.getItems(data,data.length)
    this.$apply()

  }
  async updateServiceList(id) {
    let res = await wepy.request({
         url: service.host + '/search/'+id,
         data:{
           type:1
         },
         method: 'GET'
    })
    const data = res.data
    // var finallist = await this.handelList(data)
    // this.list1 = this.getItems(finallist,finallist.length)
    this.list1 = this.getItems(data,data.length)
    this.$apply()

  }
  async handelList(data){
    var list = []
    for(var i=0;i<=data.length;i++){
      if(i==data.length){
        return list
      }else{
        var startTime = this.formatDateTime(data[i].startTime)
        if((new Date(startTime).valueOf()-new Date().valueOf())>0){
          list.push(data[i])
        }
      }
    }
    this.$apply()
  } 
  // 处理图书列表
  getItems(data,len) {

    return this.getArray(data).map((item, index) => {
      var startTime = this.formatDateTime(item.startTime)
      var timeout = 0
      if(this.checkDate(startTime)<0){
          timeout = 1
      }
      return {
        id: item.ServiceID,
        title: item.serviceContent,
        name: item.name,
        authorID: item.UserID,
        date: startTime.substring(0,10),
        mytime: startTime.substring(11,19),
        startTime:this.checkDate(startTime),
        timeout:timeout,
        content: this.convertHtmlToText(item.remark),
        duration: item.duration,
        phone:item.phone
      }
      // 拼接示例数据
      
    })
    this.$apply()
  }

   

  methods = {}

  components = {
    SearchBar,
    BookList1 : BookList,
    BookList2 : BookList,
    Swiper
  }
}
</script>

<style lang="less">
@import "../styles/custom/fn.less";
.page-index {
  // some style
}
</style>
